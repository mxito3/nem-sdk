/**
 * Catapult REST API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.7.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.1-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * NodeInfoDTO.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_NodeInfoDTO_H_
#define IO_SWAGGER_CLIENT_MODEL_NodeInfoDTO_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  NodeInfoDTO
    : public ModelBase
{
public:
    NodeInfoDTO();
    virtual ~NodeInfoDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// NodeInfoDTO members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPublicKey() const;
        void setPublicKey(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    int32_t getPort() const;
        void setPort(int32_t value);
    /// <summary>
    /// 
    /// </summary>
    int32_t getNetworkIdentifier() const;
        void setNetworkIdentifier(int32_t value);
    /// <summary>
    /// 
    /// </summary>
    int32_t getVersion() const;
        void setVersion(int32_t value);
    /// <summary>
    /// 
    /// </summary>
    int32_t getRoles() const;
        void setRoles(int32_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getHost() const;
        void setHost(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFriendlyName() const;
        void setFriendlyName(utility::string_t value);

protected:
    utility::string_t m_PublicKey;
        int32_t m_Port;
        int32_t m_NetworkIdentifier;
        int32_t m_Version;
        int32_t m_Roles;
        utility::string_t m_Host;
        utility::string_t m_FriendlyName;
    };

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_NodeInfoDTO_H_ */
