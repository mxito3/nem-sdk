/**
 * Catapult REST API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.7.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.1-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * NamespaceRoutesApi.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_API_NamespaceRoutesApi_H_
#define IO_SWAGGER_CLIENT_API_NamespaceRoutesApi_H_


#include "../ApiClient.h"

#include "Addresses.h"
#include "NamespaceIds.h"
#include "NamespaceInfoDTO.h"
#include "NamespaceNameDTO.h"
#include <cpprest/details/basic_types.h>

#include <boost/optional.hpp>

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  NamespaceRoutesApi
{
public:
    NamespaceRoutesApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~NamespaceRoutesApi();
    /// <summary>
    /// Get namespace information
    /// </summary>
    /// <remarks>
    /// Gets the namespace for a given namespaceId.
    /// </remarks>
    /// <param name="namespaceId">The namespace identifier.</param>
    pplx::task<std::shared_ptr<NamespaceInfoDTO>> getNamespace(
        utility::string_t namespaceId
    );
    /// <summary>
    /// Get namespaces owned by an account
    /// </summary>
    /// <remarks>
    /// Gets an array of namespaces for a given account address.
    /// </remarks>
    /// <param name="accountId">The address or public key of the account.</param>
    /// <param name="pageSize">The number of namespaces to return. (optional)</param>
    /// <param name="id">The namespace id up to which namespace objects are returned. (optional)</param>
    pplx::task<std::vector<std::shared_ptr<NamespaceInfoDTO>>> getNamespacesFromAccount(
        utility::string_t accountId,
        boost::optional<int32_t> pageSize,
        boost::optional<utility::string_t> id
    );
    /// <summary>
    /// Get namespaces for given array of addresses
    /// </summary>
    /// <remarks>
    /// Gets namespaces for a given array of addresses.
    /// </remarks>
    /// <param name="addresses">An array of addresses.</param>
    /// <param name="pageSize">The number of namespaces to return. (optional)</param>
    /// <param name="id">The namespace id up to which namespace objects are returned. (optional)</param>
    pplx::task<std::vector<std::shared_ptr<NamespaceInfoDTO>>> getNamespacesFromAccounts(
        std::shared_ptr<Addresses> addresses,
        boost::optional<int32_t> pageSize,
        boost::optional<utility::string_t> id
    );
    /// <summary>
    /// Get readable names for a set of namespaces
    /// </summary>
    /// <remarks>
    /// Returns friendly names for mosaics.
    /// </remarks>
    /// <param name="namespaceIds">An array of namespaceIds.</param>
    pplx::task<std::vector<std::shared_ptr<NamespaceNameDTO>>> getNamespacesNames(
        std::shared_ptr<NamespaceIds> namespaceIds
    );

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_API_NamespaceRoutesApi_H_ */

