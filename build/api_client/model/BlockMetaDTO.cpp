/**
 * Catapult REST API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.7.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.1-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */



#include "BlockMetaDTO.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

BlockMetaDTO::BlockMetaDTO()
{
    m_Hash = utility::conversions::to_string_t("");
    m_GenerationHash = utility::conversions::to_string_t("");
    m_NumTransactions = 0.0;
}

BlockMetaDTO::~BlockMetaDTO()
{
}

void BlockMetaDTO::validate()
{
    // TODO: implement validation
}

web::json::value BlockMetaDTO::toJson() const
{
    web::json::value val = web::json::value::object();

    val[utility::conversions::to_string_t("hash")] = ModelBase::toJson(m_Hash);
    val[utility::conversions::to_string_t("generationHash")] = ModelBase::toJson(m_GenerationHash);
    val[utility::conversions::to_string_t("totalFee")] = ModelBase::toJson(m_TotalFee);
    val[utility::conversions::to_string_t("numTransactions")] = ModelBase::toJson(m_NumTransactions);

    return val;
}

void BlockMetaDTO::fromJson(web::json::value& val)
{
    setHash(ModelBase::stringFromJson(val[utility::conversions::to_string_t("hash")]));
    setGenerationHash(ModelBase::stringFromJson(val[utility::conversions::to_string_t("generationHash")]));
    std::shared_ptr<UInt64DTO> newTotalFee(new UInt64DTO());
    newTotalFee->fromJson(val[utility::conversions::to_string_t("totalFee")]);
    setTotalFee( newTotalFee );
    setNumTransactions(ModelBase::doubleFromJson(val[utility::conversions::to_string_t("numTransactions")]));
}

void BlockMetaDTO::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t("hash"), m_Hash));
    multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t("generationHash"), m_GenerationHash));
    m_TotalFee->toMultipart(multipart, utility::conversions::to_string_t("totalFee."));
    multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t("numTransactions"), m_NumTransactions));
}

void BlockMetaDTO::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    setHash(ModelBase::stringFromHttpContent(multipart->getContent(utility::conversions::to_string_t("hash"))));
    setGenerationHash(ModelBase::stringFromHttpContent(multipart->getContent(utility::conversions::to_string_t("generationHash"))));
    std::shared_ptr<UInt64DTO> newTotalFee(new UInt64DTO());
    newTotalFee->fromMultiPart(multipart, utility::conversions::to_string_t("totalFee."));
    setTotalFee( newTotalFee );
    setNumTransactions(ModelBase::doubleFromHttpContent(multipart->getContent(utility::conversions::to_string_t("numTransactions"))));
}

utility::string_t BlockMetaDTO::getHash() const
{
    return m_Hash;
}


void BlockMetaDTO::setHash(utility::string_t value)
{
    m_Hash = value;
    
}
utility::string_t BlockMetaDTO::getGenerationHash() const
{
    return m_GenerationHash;
}


void BlockMetaDTO::setGenerationHash(utility::string_t value)
{
    m_GenerationHash = value;
    
}
std::shared_ptr<UInt64DTO> BlockMetaDTO::getTotalFee() const
{
    return m_TotalFee;
}


void BlockMetaDTO::setTotalFee(std::shared_ptr<UInt64DTO> value)
{
    m_TotalFee = value;
    
}
double BlockMetaDTO::getNumTransactions() const
{
    return m_NumTransactions;
}


void BlockMetaDTO::setNumTransactions(double value)
{
    m_NumTransactions = value;
    
}
}
}
}
}

